{
  "uid" : "be850f243539291f",
  "name" : "Find and delete user",
  "fullName" : "test.test_users.TestUsers#test_users",
  "historyId" : "476081d539132dfcd130f046186d34b7",
  "time" : {
    "start" : 1749297799632,
    "stop" : 1749297803232,
    "duration" : 3600
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Failed to delete user with id afb293ae-04d3-4442-8913-6a643b5878ad. Status code: 500",
  "statusTrace" : "self = <test_users.TestUsers object at 0x7f8dd5d126c0>\n\n    @pytest.mark.smoke\n    @allure.title(\"Find and delete user\")\n    def test_users(self):\n        # user = self.users_api.create_user()\n        # self.users_api.delete_user_by_id(user.uuid)\n        self.users_api.get_list_all_users()\n>       self.users_api.delete_user_by_id(\"afb293ae-04d3-4442-8913-6a643b5878ad\")\n\ntest/test_users.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <services.users.api.UsersAPI object at 0x7f8dd44e32c0>\nuser_id = 'afb293ae-04d3-4442-8913-6a643b5878ad'\n\n    @allure.step(\"Delete user by id\")\n    def delete_user_by_id(self, user_id: str):\n        response = requests.delete(\n            url=self.endpoints.delete_user_by_id(user_id),\n            headers=self.headers.basic\n        )\n        print(response.status_code)\n        print(response.text)  # Или response.json() — если это JSON\n>       assert response.status_code == 204, f\"Failed to delete user with id {user_id}. Status code: {response.status_code}\"\nE       AssertionError: Failed to delete user with id afb293ae-04d3-4442-8913-6a643b5878ad. Status code: 500\n\nservices/users/api.py:44: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1749297799630,
      "stop" : 1749297799631,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_xunit_setup_method_fixture_TestUsers",
    "time" : {
      "start" : 1749297799631,
      "stop" : 1749297799631,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Failed to delete user with id afb293ae-04d3-4442-8913-6a643b5878ad. Status code: 500",
    "statusTrace" : "self = <test_users.TestUsers object at 0x7f8dd5d126c0>\n\n    @pytest.mark.smoke\n    @allure.title(\"Find and delete user\")\n    def test_users(self):\n        # user = self.users_api.create_user()\n        # self.users_api.delete_user_by_id(user.uuid)\n        self.users_api.get_list_all_users()\n>       self.users_api.delete_user_by_id(\"afb293ae-04d3-4442-8913-6a643b5878ad\")\n\ntest/test_users.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <services.users.api.UsersAPI object at 0x7f8dd44e32c0>\nuser_id = 'afb293ae-04d3-4442-8913-6a643b5878ad'\n\n    @allure.step(\"Delete user by id\")\n    def delete_user_by_id(self, user_id: str):\n        response = requests.delete(\n            url=self.endpoints.delete_user_by_id(user_id),\n            headers=self.headers.basic\n        )\n        print(response.status_code)\n        print(response.text)  # Или response.json() — если это JSON\n>       assert response.status_code == 204, f\"Failed to delete user with id {user_id}. Status code: {response.status_code}\"\nE       AssertionError: Failed to delete user with id afb293ae-04d3-4442-8913-6a643b5878ad. Status code: 500\n\nservices/users/api.py:44: AssertionError",
    "steps" : [ {
      "name" : "Get list users ",
      "time" : {
        "start" : 1749297799632,
        "stop" : 1749297801931,
        "duration" : 2299
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "4ce081409c0b7586",
        "name" : "API response",
        "source" : "4ce081409c0b7586.json",
        "type" : "application/json",
        "size" : 2379
      } ],
      "parameters" : [ {
        "name" : "offset",
        "value" : "0"
      }, {
        "name" : "limit",
        "value" : "10"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Delete user by id",
      "time" : {
        "start" : 1749297801932,
        "stop" : 1749297803231,
        "duration" : 1299
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Failed to delete user with id afb293ae-04d3-4442-8913-6a643b5878ad. Status code: 500\n",
      "statusTrace" : "  File \"/usr/local/lib/python3.12/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/workspace/services/users/api.py\", line 44, in delete_user_by_id\n    assert response.status_code == 204, f\"Failed to delete user with id {user_id}. Status code: {response.status_code}\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "user_id",
        "value" : "'afb293ae-04d3-4442-8913-6a643b5878ad'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_xunit_setup_method_fixture_TestUsers::0",
    "time" : {
      "start" : 1749297803267,
      "stop" : 1749297803267,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Test User"
  }, {
    "name" : "tag",
    "value" : "smoke"
  }, {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_users"
  }, {
    "name" : "subSuite",
    "value" : "TestUsers"
  }, {
    "name" : "host",
    "value" : "cb426ff55724"
  }, {
    "name" : "thread",
    "value" : "7-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_users"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 4,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 1,
        "unknown" : 0,
        "total" : 5
      },
      "items" : [ {
        "uid" : "11ed7332a9fcee20",
        "status" : "passed",
        "time" : {
          "start" : 1749297501288,
          "stop" : 1749297504429,
          "duration" : 3141
        }
      }, {
        "uid" : "479922fa5efe167",
        "status" : "failed",
        "statusDetails" : "AssertionError: {'code': 401, 'message': 'security requirements failed: authentication failed, please set correct \"Bearer\" header'}",
        "time" : {
          "start" : 1749296700705,
          "stop" : 1749296703015,
          "duration" : 2310
        }
      }, {
        "uid" : "64bd75a22b96ad54",
        "status" : "failed",
        "statusDetails" : "AssertionError: {'code': 401, 'message': 'security requirements failed: authentication failed, please set correct \"Bearer\" header'}",
        "time" : {
          "start" : 1749296327354,
          "stop" : 1749296329363,
          "duration" : 2009
        }
      }, {
        "uid" : "9172ecdc1cbdf4ec",
        "status" : "failed",
        "statusDetails" : "AssertionError: {'code': 401, 'message': 'security requirements failed: authentication failed, please set correct \"Bearer\" header'}",
        "time" : {
          "start" : 1749295715104,
          "stop" : 1749295717609,
          "duration" : 2505
        }
      } ]
    },
    "tags" : [ "smoke" ]
  },
  "source" : "be850f243539291f.json",
  "parameterValues" : [ ]
}